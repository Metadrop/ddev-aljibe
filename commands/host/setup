#!/bin/bash
#ddev-generated
## Description: Configure environment and optionally install sites
## Usage: setup [flags]
## Example: ddev setup --no-install

# Include the ddev_checks script
source "$(dirname "$0")/includes/aljibe_includes"

# Initialize our own variables
NO_INSTALL=0
NO_THEMES=0

## Project must be running to run this command
star_project

CONFIG_DEFAULT_SITE=$(ddev aljibe-config default_site)
if [ "$CONFIG_DEFAULT_SITE" == 'null' ]; then
  SITES=('self')
else
  SITES=("$CONFIG_DEFAULT_SITE")
fi

THEMES=()

# A POSIX variable
OPTIND=1         # Reset in case getopts has been used previously in the shell.

help() {
echo "Usage: ddev setup [options]"
  echo
  echo "Options:"
  echo "  -h, --help        Show this help message and exit"
  echo "  -a, --all         Install all sites"
  echo "  -f, --no-themes   Do not process themes"
  echo "  -n, --no-install  Do not install sites"
  echo "  -s, --sites       Install specific sites"
  echo "  -t, --themes      Only process specified themes"
  echo
  echo "Examples:"
  echo "  ddev setup -a          Install all sites"
  echo "  ddev setup -n -f          Do not install sites and do not process themes"
  echo "  ddev setup -s=site1,site2 Install specific sites (site1 and site2)"
  echo "  ddev setup -t=theme1      Only process specified theme (theme1)"
  exit 0
}

handle_options() {
  while [ $# -gt 0 ]; do
    case $1 in
      -a | --all)
        set_sites_variable
        shift
        ;;
      -h | --help)
        help
        ;;
      -n | --no-install)
        NO_INSTALL=1
        shift
        ;;
      -f | --no-themes)
        NO_THEMES=1
        shift
        ;;
      -s* | --sites*)
        if [[ $1 == *=* ]]; then
          IFS=',' read -a SITES <<< "$(extract_argument "$1")"
          shift
        else
          if [ -z "$2" ]; then
            echo "Sites not specified." >&2
            exit 0
          fi
          IFS=',' read -ar SITES <<< "$2"
          shift 2
        fi
        ;;
      -t* | --themes*)
        if [[ $1 == *=* ]]; then
          IFS=',' read -ar THEMES <<< "$(extract_argument "$1")"
          shift
        else
          if [ -z "$2" ]; then
            echo "Themes not specified." >&2
            exit 0
          fi
          IFS=',' read -ar THEMES <<< "$2"
          shift 2
        fi
        ;;
      *)
        echo "Invalid option: $1" >&2
        exit 0
        ;;
    esac
  done
}

# Main script execution
handle_options "$@"

# Launch pre setup hooks
run_hooks "pre_setup"

# Prepare Drupal and dev environment
ddev composer install || exit 1
ddev exec vendor/bin/grumphp git:init

# Building frontend theme
if [ "$NO_THEMES" -eq 0 ]; then
  echo
  echo -e "\033[32mBuilding frontend themes: \033[0m\n"
  if [ ${#THEMES[@]} -eq 0 ]; then
    readarray -t THEMES < <(ddev aljibe-config theme_paths --keys)
  fi
  if [ ${#THEMES[@]} -eq 0 ]; then
    echo "No themes found, any theme will be processed. If there should be any theme processed, please add them to aljibe.yml"
  elif [ ${#THEMES[@]} -eq 1 ]; then
    ddev frontend production "${THEMES[0]}"
  else
    for theme in "${THEMES[@]}"; do
      echo -e "\033[32mBuilding theme:\033[32;1m ${theme}\033[0m"
      ddev frontend production "$theme"
    done
  fi
fi

# Try to install sites if not --no-install is given
if [ "$NO_INSTALL" -eq 0 ]; then
    for SITE in "${SITES[@]}"; do
        echo
        echo -e "\033[32mInstalling site: ${SITE}  \033[0m\n"
        ddev site-install "$SITE"
    done
fi

# Launch post setup hooks
run_hooks "post_setup"
